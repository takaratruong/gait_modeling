0.11372403347337927 0.16542035662632248 4.1536481536396995e-11
2.02768487280189e-11 0.05238739106973207 2.3505971327555607e-09
0.12786783383801137 0.08439777465220791 2.645100385358417e-05
0.9950300732157505 0.08984714909453666 1.6841500976903637e-09
3.251883985676732e-09 0.08800513091606235 3.917262267262659e-07
iteration:  0
0.014374784230648986 0.932375419422213 0.9999242065548853
0.37272085774986313 0.9142797833249573 0.645004229468073
0.9466611250292667 0.9179080680740692 0.994959957969579
0.6845878951574955 0.9637907989624507 0.8808345313468624
> /home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py(249)collect_samples_vec()
    248             # rewards.append(reward.clone())
--> 249             next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
    250             reward = torch.from_numpy(reward).to(device).type(torch.cuda.FloatTensor)
[?2004h[?1l[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7le[?7h[?12l[?25h[?25l[?7lx[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7le[?7h[?12l[?25h[?25l[?7lx[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7l([?7h[?12l[?25h[?25l[?7l)[?7h[?12l[?ipdb> exit()
[?7h[?12l[?25h[?2004l
Traceback (most recent call last):
  File "run_amp.py", line 33, in <module>
    ppo.collect_samples_multithread()
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 445, in collect_samples_multithread
    self.collect_samples_vec(300, noise=noise)
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 249, in collect_samples_vec
    next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 249, in collect_samples_vec
    next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
  File "/usr/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/usr/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
If you suspect this is an IPython 8.3.0 bug, please report it at:
    https://github.com/ipython/ipython/issues
or send an email to the mailing list at ipython-dev@python.org
You can print a more detailed traceback right now with "%tb", or use "%debug"
to interactively debug it.
Extra-detailed tracebacks for bug-reporting purposes can be enabled via:
    %config Application.verbose_crash=True