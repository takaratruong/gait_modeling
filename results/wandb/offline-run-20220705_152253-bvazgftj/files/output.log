0.7778097327903881 0.17259951718311092 8.114670419672593e-10 -0.0638088468586464 0.22051313168779701
0.013613096013953042 0.3735501838188311 1.212984868888696e-10 -0.0038588397316651345 -0.9270052023673845
9.751515752276496e-09 0.18453158736179465 3.577957383777773e-05 -0.0911366553379826 1.9198557926237714
3.2814757353701165e-45 0.33874273809692196 0.0028254118142760102 -0.19889093557570162 4.524354555860777
5.341504762493655e-14 0.060290464067132475 4.122853853700322e-15 0.03614639849950335 -2.4721679058535635
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
iteration:  0
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
0.8262459784302122 0.9549570661994689 0.7414602277304972 0.0014248518751583887 0.19537589138774022
0.000959236337268152 0.8354138523471419 0.45635874869591014 -0.031423154084243836 1.1787619134374199
0.9429463232465419 0.9145343296792667 0.9166876076290191 0.0022018215018617454 0.10838470666888506
0.9888978625570853 0.9121870638196001 0.6651970662830721 0.004242302248176662 -0.04717675674871985
> /home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py(249)collect_samples_vec()
    248             # rewards.append(reward.clone())
--> 249             next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
    250             reward = torch.from_numpy(reward).to(device).type(torch.cuda.FloatTensor)
[?2004h[?1l[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7le[?7h[?12l[?25h[?25l[?7lx[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7l([?7h[?12l[?25h[?25l[?7l)[?7h[?12l[?ipdb> exit()
[?7h[?12l[?25h[?2004l
Traceback (most recent call last):
  File "run_amp.py", line 33, in <module>
    ppo.collect_samples_multithread()
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 445, in collect_samples_multithread
    self.collect_samples_vec(300, noise=noise)
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 249, in collect_samples_vec
    next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 249, in collect_samples_vec
    next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
  File "/usr/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/usr/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
If you suspect this is an IPython 8.3.0 bug, please report it at:
    https://github.com/ipython/ipython/issues
or send an email to the mailing list at ipython-dev@python.org
You can print a more detailed traceback right now with "%tb", or use "%debug"
to interactively debug it.
Extra-detailed tracebacks for bug-reporting purposes can be enabled via:
    %config Application.verbose_crash=True