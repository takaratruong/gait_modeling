3.23427270811596e-12 0.09536575947138527 1.2260713533447612e-08 -0.14693689831199747 2.298435821545953
6.800541394859668e-45 0.20140288987396376 4.182520921438069e-09 0.18034195555072302 -4.508531479694123
6.4230495297194e-17 0.07700907730009922 4.8491647135193326e-05 -0.12552775824378365 2.729561837920778
0.05472232254909329 0.12121822828576961 3.599334853747733e-15 -0.0558577706482834 -0.7614779551950083
0.79264418132804 0.4915071742328398 9.828801922614833e-10 -0.03728373099544683 -0.21428985244726806
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
iteration:  0
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
init vel [1. 0. 0. 0. 0. 0. 0. 0. 0.]
0.3460844484129343 0.95325359127092 0.5207068648329247 -0.007529157297061488 0.46064283055920113
3.462809213807422e-05 0.895760654211044 0.765429833712385 -0.044299259955696425 1.432963394155773
0.9350392515215046 0.8571822992024498 0.8043313250630055 0.006773261060462529 0.11582315503119908
0.9470066775389736 0.9519171854798448 0.9232153504005445 0.000658691560637922 0.1043535019213622
> /home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py(249)collect_samples_vec()
    248             # rewards.append(reward.clone())
--> 249             next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
    250             reward = torch.from_numpy(reward).to(device).type(torch.cuda.FloatTensor)
[?2004h[?1l[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7le[?7h[?12l[?25h[?25l[?7lx[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7l([?7h[?12l[?25h[?25l[?7l)[?7h[?12l[?ipdb> exit()
[?7h[?12l[?25h[?2004l
Traceback (most recent call last):
  File "run_amp.py", line 33, in <module>
    ppo.collect_samples_multithread()
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 445, in collect_samples_multithread
    self.collect_samples_vec(300, noise=noise)
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 249, in collect_samples_vec
    next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
  File "/home/zhaoming/Documents/gait_modeling/utils/amp_ppo.py", line 249, in collect_samples_vec
    next_state = torch.from_numpy(next_state).to(device).type(torch.cuda.FloatTensor)
  File "/usr/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/usr/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
If you suspect this is an IPython 8.3.0 bug, please report it at:
    https://github.com/ipython/ipython/issues
or send an email to the mailing list at ipython-dev@python.org
You can print a more detailed traceback right now with "%tb", or use "%debug"
to interactively debug it.
Extra-detailed tracebacks for bug-reporting purposes can be enabled via:
    %config Application.verbose_crash=True